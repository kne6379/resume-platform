// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  name       String
  provider   Provider @default(LOCAL)
  profileUrl String?  @map("profile_url")
  role       Role     @default(APPLICANT)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  resumes Resume[]

  @@map("users")
}

model Resume {
  id     Int    @id @default(autoincrement())
  userId Int    @map("user_id")
  title  String
  bio    String @db.Text
  status Status @default(APPLY)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  resume_histories ResumeHistories[]
  user             User              @relation(fields: [userId], references: [id])

  @@map("resumes")
}

model ResumeHistories {
  id        Int    @id @default(autoincrement())
  resumeId  Int    @map("resume_id")
  modifier  String
  oldStatus Status @map("old_status")
  newStatus Status @map("new_status")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  resumes Resume @relation(fields: [resumeId], references: [id])

  @@map("resume_histories")
}

enum Role {
  APPLICANT
  RECRUITER
}

enum Status {
  APPLY
  DROP
  PASS
  INTERVIEW1
  INTERVIEW2
  FINAL_PASS
}

enum Provider {
  LOCAL
  NAVER
  KAKAO
}
